[package]
name = "exint"
version = "0.1.0"
edition = "2024"
license = "MIT OR Apache-2.0"
readme = "README.md"

[features]
default = []

# ------------------------------------------------------------------------------
# Groups
# ------------------------------------------------------------------------------

all_backend = [
  "const_trait_impl",
  "core_intrinsics",
  "generic_const_exprs",
  "min_specialization",
]

all_nightly = [
  "adt_const_params",
  "ascii_char",
  "bigint_helper_methods",
  "disjoint_bitor",
  "f16",
  "f128",
  "integer_atomics",
  "never_type",
  "random",
  "step_trait",
  "structural_match",
  "trusted_step",
  "unsized_const_params",
]

all_unstable = [
  "int_from_ascii",
  "int_roundings",
  "is_ascii_octdigit",
  "isolate_most_least_significant_one",
  "mixed_integer_ops_unsigned_sub",
  "strict_overflow_ops",
  "unchecked_neg",
  "unchecked_shifts",
  "unsigned_signed_diff",
  "utf16_extra",
  "wrapping_next_power_of_two",
]

# ------------------------------------------------------------------------------
# Markers
# ------------------------------------------------------------------------------

# Marker indicating features that require a nightly compiler
nightly = []

# Marker indicating features that require the rust standard library
std = []

# Marker indicating features that require the `min_specialization` specialization
specialization = ["nightly"]

# Marker indicating features that require internal rust features
internal_features = ["nightly"]

# Marker indicating features that require incomplete rust features
incomplete_features = ["nightly"]

# ------------------------------------------------------------------------------
# Backend
# ------------------------------------------------------------------------------

# Enable backend functionality that requires the `const_trait_impl` feature
#
# Note: This is not useful without `min_specialization`.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/67792
const_trait_impl = ["nightly"]

# Enable backend functionality that requires the `core_intrinsics` feature
#
# Note: This is perma-unstable in Rust.
core_intrinsics = ["internal_features"]

# Enable backend functionality that requires the `generic_const_exprs` feature
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/76560
generic_const_exprs = ["incomplete_features"]

# Enable backend functionality that requires the `min_specialization` feature
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/31844
min_specialization = ["const_trait_impl", "specialization"]

# ------------------------------------------------------------------------------
# Nightly
# ------------------------------------------------------------------------------

# Enable support for `adt_const_params` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/128028
adt_const_params = ["unsized_const_params"]

# Enable support for `ascii_char` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/110998
ascii_char = ["nightly"]

# Enable support for `bigint_helper_methods` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/85532
bigint_helper_methods = ["generic_const_exprs"]

# Enable support for `disjoint_bitor` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/135758
disjoint_bitor = ["nightly"]

# Enable support for `f16` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/116909
f16 = ["nightly"]

# Enable support for `f128` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/116909
f128 = ["nightly"]

# Enable support for `integer_atomics` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/99069
integer_atomics = ["nightly"]

# Enable support for `never_type` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/35121
never_type = ["nightly"]

# Enable support for `random` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/130703
random = ["nightly"]

# Enable support for `step_trait` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/42168
step_trait = ["nightly"]

# Enable support for `structural_match` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/31434
structural_match = ["nightly"]

# Enable support for `trusted_step` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/85731
trusted_step = ["specialization", "step_trait"]

# Enable support for `unsized_const_params` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/95174
unsized_const_params = ["incomplete_features", "structural_match"]

# ------------------------------------------------------------------------------
# Unstable
# ------------------------------------------------------------------------------

# Enable support for `int_from_ascii` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/134821
int_from_ascii = []

# Enable support for `int_roundings` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/88581
int_roundings = []

# Enable support for `is_ascii_octdigit` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/101288
is_ascii_octdigit = []

# Enable support for `isolate_most_least_significant_one` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/136909
isolate_most_least_significant_one = []

# Enable support for `mixed_integer_ops_unsigned_sub` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/126043
mixed_integer_ops_unsigned_sub = []

# Enable support for `strict_overflow_ops` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/118260
strict_overflow_ops = []

# Enable support for `unchecked_neg` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/85122
unchecked_neg = []

# Enable support for `unchecked_shifts` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/85122
unchecked_shifts = []

# Enable support for `unsigned_signed_diff` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/126041
unsigned_signed_diff = []

# Enable support for `utf16_extra` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/94919
utf16_extra = []

# Enable support for `wrapping_next_power_of_two` core functionality.
#
# Tracking Issue: https://github.com/rust-lang/rust/issues/32463
wrapping_next_power_of_two = []

[lints.rust]
# Lint Groups
warnings = { level = "deny", priority = -1 }
deprecated-safe = { level = "deny", priority = -1 }
future-incompatible = { level = "deny", priority = -1 }
keyword-idents = { level = "deny", priority = -1 }
let-underscore = { level = "deny", priority = -1 }
nonstandard-style = { level = "deny", priority = -1 }
refining-impl-trait = { level = "deny", priority = -1 }
rust-2018-compatibility = { level = "deny", priority = -1 }
rust-2018-idioms = { level = "deny", priority = -1 }
rust-2021-compatibility = { level = "deny", priority = -1 }
rust-2024-compatibility = { level = "deny", priority = -1 }
unused = { level = "deny", priority = -1 }

# Standalone Lints
ambiguous_negative_literals = "deny"
ffi_unwind_calls = "deny"
macro_use_extern_crate = "deny"
meta_variable_misuse = "deny"
missing_abi = "deny"
missing_copy_implementations = "deny"
missing_debug_implementations = "deny"
missing_docs = "deny"
non_ascii_idents = "deny"
redundant_imports = "deny"
redundant_lifetimes = "deny"
single_use_lifetimes = "allow" # allow because noisy
trivial_casts = "deny"
trivial_numeric_casts = "deny"
unit_bindings = "deny"
unnameable_types = "deny"
unreachable_pub = "deny"
unsafe_code = "allow" # allow because we define and use unsafe APIs
unstable_features = "allow" # allow because we allow user-enabled features
unused_crate_dependencies = "deny"
unused_import_braces = "deny"
unused_lifetimes = "deny"
unused_qualifications = "deny"
unused_results = "deny"
variant_size_differences = "deny"

# Standalone Lints (unstable)
# closure_returning_async_block = "deny"
# fuzzy_provenance_casts = "deny"
# lossy_provenance_casts = "deny"
# multiple_supertrait_upcastable = "deny"
# must_not_suspend = "deny"
# non_exhaustive_omitted_patterns = "deny"
# unqualified_local_imports = "deny"

[lints.clippy]
correctness = { level = "deny", priority = -1 }
suspicious = { level = "deny", priority = -1 }
complexity = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
style = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }

# pedantic noise
cast_possible_truncation = "allow"
doc_markdown = "allow"
if_not_else = "allow"
items_after_statements = "allow"
missing_errors_doc = "allow"
must_use_candidate = "allow"
unreadable_literal = "allow"
unused_self = "allow"

[lints.rustdoc] # https://doc.rust-lang.org/rustdoc/lints.html
bare_urls = "deny"
broken_intra_doc_links = "deny"
invalid_codeblock_attributes = "deny"
invalid_html_tags = "deny"
invalid_rust_codeblocks = "deny"
missing_crate_level_docs = "deny"
private_doc_tests = "deny"
private_intra_doc_links = "deny"
redundant_explicit_links = "deny"
unescaped_backticks = "deny"
