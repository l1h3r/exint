macro_rules! test {
  ($type:ident, $min:literal, $max:literal) => {
    mod $type {
      use exint::primitive::$type;

      const A: $type = $type::from_u8(0);
      const B: $type = $type::from_u8(1);
      const C: $type = $type::from_i8(-1);

      #[test]
      fn test_zero() {
        assert_eq!(format!("{}", A), "0");
        assert_eq!(format!("{:?}", A), "0");
        assert_eq!(format!("{:o}", A), "0");
        assert_eq!(format!("{:b}", A), "0");
        assert_eq!(format!("{:x}", A), "0");
        assert_eq!(format!("{:X}", A), "0");
      }

      #[test]
      fn test_one() {
        assert_eq!(format!("{}", B), "1");
        assert_eq!(format!("{:?}", B), "1");
        assert_eq!(format!("{:o}", B), "1");
        assert_eq!(format!("{:b}", B), "1");
        assert_eq!(format!("{:x}", B), "1");
        assert_eq!(format!("{:X}", B), "1");
      }

      #[test]
      fn test_negative_one() {
        if <$type as exint::backend::Uint>::UINT {
          assert_eq!(format!("{}", C), $max);
          assert_eq!(format!("{:?}", C), $max);



        } else {
          assert_eq!(format!("{}", C), "-1");
          assert_eq!(format!("{:?}", C), "-1");



        }

        assert_eq!(format!("{:b}", C), "1".repeat(size_of::<$type>() * 8));
        assert_eq!(format!("{:x}", C), "f".repeat(size_of::<$type>() * 2));
        assert_eq!(format!("{:X}", C), "F".repeat(size_of::<$type>() * 2));
      }

      #[test]
      fn test_min_max() {
        assert_eq!(format!("{}", $type::MIN), $min);
        assert_eq!(format!("{}", $type::MAX), $max);
      }

      #[test]
      fn test_prefix() {
        assert_eq!(format!("{:#}", B), "1");
        assert_eq!(format!("{:#?}", B), "1");
        assert_eq!(format!("{:#o}", B), "0o1");
        assert_eq!(format!("{:#b}", B), "0b1");
        assert_eq!(format!("{:#x}", B), "0x1");
        assert_eq!(format!("{:#X}", B), "0x1");
      }

      #[test]
      fn test_options() {
        // Test Alignment and Width
        assert_eq!(format!("{:<5}", A), "0    ");
        assert_eq!(format!("{:^5}", A), "  0  ");
        assert_eq!(format!("{:>5}", A), "    0");

        // Test Alignment with Fill and Width
        assert_eq!(format!("{:1<5}", A), "01111");
        assert_eq!(format!("{:1^5}", A), "11011");
        assert_eq!(format!("{:1>5}", A), "11110");

        // Test Sign
        assert_eq!(format!("{:+}", A), "+0");

        // Test Sign and Width
        assert_eq!(format!("{:+5}", A), "   +0");

        // Test Type Prefix
        assert_eq!(format!("0b{:08b}", A), format!("{:#010b}", A));
        assert_eq!(format!("0o{:07o}", A), format!("{:#09o}", A));
        assert_eq!(format!("0x{:016x}", A), format!("{:#018x}", A));
        assert_eq!(format!("0x{:016X}", A), format!("{:#018X}", A));

        // Test Multiple Options
        assert_eq!(
          format!("{:->+#width$b}", A, width = $type::BITS as usize),
          format!("{}+0b0", "-".repeat($type::BITS as usize - 4)),
        );
      }
    }
  };
}

test!(i8, "-128", "127");
test!(i16, "-32768", "32767");
test!(i24, "-8388608", "8388607");
test!(i32, "-2147483648", "2147483647");
test!(i40, "-549755813888", "549755813887");
test!(i48, "-140737488355328", "140737488355327");
test!(i56, "-36028797018963968", "36028797018963967");
test!(i64, "-9223372036854775808", "9223372036854775807");
test!(i72, "-2361183241434822606848", "2361183241434822606847");
test!(i80, "-604462909807314587353088", "604462909807314587353087");
test!(i88, "-154742504910672534362390528", "154742504910672534362390527");
test!(i96, "-39614081257132168796771975168", "39614081257132168796771975167");
test!(i104, "-10141204801825835211973625643008", "10141204801825835211973625643007");
test!(i112, "-2596148429267413814265248164610048", "2596148429267413814265248164610047");
test!(i120, "-664613997892457936451903530140172288", "664613997892457936451903530140172287");
test!(i128, "-170141183460469231731687303715884105728", "170141183460469231731687303715884105727");

test!(
  i256,
  "-57896044618658097711785492504343953926634992332820282019728792003956564819968",
  "57896044618658097711785492504343953926634992332820282019728792003956564819967"
);

test!(
  i512,
  "-6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042048",
  "6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042047"
);

test!(
  i1024,
  "-89884656743115795386465259539451236680898848947115328636715040578866337902750481566354238661203768010560056939935696678829394884407208311246423715319737062188883946712432742638151109800623047059726541476042502884419075341171231440736956555270413618581675255342293149119973622969239858152417678164812112068608",
  "89884656743115795386465259539451236680898848947115328636715040578866337902750481566354238661203768010560056939935696678829394884407208311246423715319737062188883946712432742638151109800623047059726541476042502884419075341171231440736956555270413618581675255342293149119973622969239858152417678164812112068607"
);

test!(
  i2048,
  "-16158503035655503650357438344334975980222051334857742016065172713762327569433945446598600705761456731844358980460949009747059779575245460547544076193224141560315438683650498045875098875194826053398028819192033784138396109321309878080919047169238085235290822926018152521443787945770532904303776199561965192760957166694834171210342487393282284747428088017663161029038902829665513096354230157075129296432088558362971801859230928678799175576150822952201848806616643615613562842355410104862578550863465661734839271290328348967522998634176499319107762583194718667771801067716614802322659239302476074096777926805529798115328",
  "16158503035655503650357438344334975980222051334857742016065172713762327569433945446598600705761456731844358980460949009747059779575245460547544076193224141560315438683650498045875098875194826053398028819192033784138396109321309878080919047169238085235290822926018152521443787945770532904303776199561965192760957166694834171210342487393282284747428088017663161029038902829665513096354230157075129296432088558362971801859230928678799175576150822952201848806616643615613562842355410104862578550863465661734839271290328348967522998634176499319107762583194718667771801067716614802322659239302476074096777926805529798115327"
);

test!(
  i4096,
  "-522194440706576253345876355358312191289982124523691890192116741641976953985778728424413405967498779170445053357219631418993786719092896803631618043925682638972978488271854999170180795067191859157214035005927973113188159419698856372836167342172293308748403954352901852035642024370059304557233988891799014503343469488440893892973452815095130470299789726716411734651513348221529512507986199933857107770846917779942645743159118957217248367043905936319748237550094520674504208530837546834166925275516486044134775384991808184705966507606898412918594045916828375610659246423184062775112999150206172392431297837246097308511903252956622805412865917690043804311051417135098849101156584508839003337597742539960818209685142687562392007453579567729991395256699805775897135553415567045292136442139895777424891477161767258532611634530697452993846501061481697843891439474220308003706472837459911525285821188577408160690315522951458068463354171428220365223949985950890732881736611925133626529949897998045399734600887312408859224933727829625089164535236559716582775403784110923285873186648442456409760158728501220463308455437074192539205964902261490928669488824051563042951500651206733594863336608245755565801460390869016718045121902354170201577095168",
  "522194440706576253345876355358312191289982124523691890192116741641976953985778728424413405967498779170445053357219631418993786719092896803631618043925682638972978488271854999170180795067191859157214035005927973113188159419698856372836167342172293308748403954352901852035642024370059304557233988891799014503343469488440893892973452815095130470299789726716411734651513348221529512507986199933857107770846917779942645743159118957217248367043905936319748237550094520674504208530837546834166925275516486044134775384991808184705966507606898412918594045916828375610659246423184062775112999150206172392431297837246097308511903252956622805412865917690043804311051417135098849101156584508839003337597742539960818209685142687562392007453579567729991395256699805775897135553415567045292136442139895777424891477161767258532611634530697452993846501061481697843891439474220308003706472837459911525285821188577408160690315522951458068463354171428220365223949985950890732881736611925133626529949897998045399734600887312408859224933727829625089164535236559716582775403784110923285873186648442456409760158728501220463308455437074192539205964902261490928669488824051563042951500651206733594863336608245755565801460390869016718045121902354170201577095167"
);

test!(u8, "0", "255");
test!(u16, "0", "65535");
test!(u24, "0", "16777215");
test!(u32, "0", "4294967295");
test!(u40, "0", "1099511627775");
test!(u48, "0", "281474976710655");
test!(u56, "0", "72057594037927935");
test!(u64, "0", "18446744073709551615");
test!(u72, "0", "4722366482869645213695");
test!(u80, "0", "1208925819614629174706175");
test!(u88, "0", "309485009821345068724781055");
test!(u96, "0", "79228162514264337593543950335");
test!(u104, "0", "20282409603651670423947251286015");
test!(u112, "0", "5192296858534827628530496329220095");
test!(u120, "0", "1329227995784915872903807060280344575");
test!(u128, "0", "340282366920938463463374607431768211455");
test!(u256, "0", "115792089237316195423570985008687907853269984665640564039457584007913129639935");
test!(u512, "0", "13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095");
test!(u1024, "0", "179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215");
test!(u2048, "0", "32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230655");
test!(u4096, "0", "1044388881413152506691752710716624382579964249047383780384233483283953907971557456848826811934997558340890106714439262837987573438185793607263236087851365277945956976543709998340361590134383718314428070011855946226376318839397712745672334684344586617496807908705803704071284048740118609114467977783598029006686938976881787785946905630190260940599579453432823469303026696443059025015972399867714215541693835559885291486318237914434496734087811872639496475100189041349008417061675093668333850551032972088269550769983616369411933015213796825837188091833656751221318492846368125550225998300412344784862595674492194617023806505913245610825731835380087608622102834270197698202313169017678006675195485079921636419370285375124784014907159135459982790513399611551794271106831134090584272884279791554849782954323534517065223269061394905987693002122963395687782878948440616007412945674919823050571642377154816321380631045902916136926708342856440730447899971901781465763473223850267253059899795996090799469201774624817718449867455659250178329070473119433165550807568221846571746373296884912819520317457002440926616910874148385078411929804522981857338977648103126085903001302413467189726673216491511131602920781738033436090243804708340403154190335");
